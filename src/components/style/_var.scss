@import url(https://fonts.googleapis.com/css?family=Lato:wght@100,300,400,700,900);

// ------------------------------------- FONTS
$font-lato: 'Lato', sans-serif;
$default-font-size: 1.6rem;
// ------------------------------------- PRIMARY COLOURS
$color-white: rgb(255, 255, 255);
$color-black: rgba(0, 0, 0);
$color-main-grayish: rgb(241, 241, 241);
$color-coral: coral;
$color-dark-gray: rgb(48, 48, 48);
// ------------------------------------- PRIMARY COLOURS FOR GRADIENTS
$headingColor1: rgb(255, 239, 169);
$headingColor2: rgba(255, 140, 111);
$text-gradient-1: rgb(255, 208, 0);
$text-gradient-2: rgba(255, 140, 111);
$card-col-1: hsla(55, 100%, 79%, 1);
$card-col-1-gradient: hsla(170, 100%, 73%, 1);
$card-col-2: hsla(197, 100%, 70%, 1);
$card-col-2-gradient: hsla(275, 100%, 82%, 1);
$card-col-3: hsla(50, 100%, 67%, 1);
$card-col-3-gradient: hsla(325, 100%, 78%, 1);
// ------------------------------------- BUTTON COLOURS
$main-btn-color: rgba(172, 172, 172);
$gray-Text-Color: rgb(119, 119, 119);
// ------------------------------------- GRID WIDTHS
$grid-width: 114rem;
$gutter-vertical: 8rem;
$gutter-vertical-small: 6rem;
$gutter-horizontal: 4rem;

// ------------------------------------- RESPONSIVE MIXINS
// 0 - 600px (phone)
// 600 - 900px (tablet vertical)
// 900 - 1200px (tablet horizontal)
// 1200 - 1800px (desktop)
// 1800px + (big desktop)
// 1em = 16px

@mixin responsive($breakpoint) {
  @if $breakpoint == XS {
    @media only screen and (max-width: 25em) {
      @content; //600px
    }
  }
  @if $breakpoint == S {
    @media only screen and (max-width: 37.5em) {
      @content; //600px
    }
  }
  @if $breakpoint == M {
    @media only screen and (max-width: 56.25em) {
      @content; //900px
    }
  }
  @if $breakpoint == XL {
    @media only screen and (max-width: 75em) {
      @content; //1200px
    }
  }
  // We dont need this one, because we already coded for standart desktop version
  // @mixin responsive-dektop {
  //   @media (max-width: 1800px) {
  //     @content;
  //   }
  // }
  @if $breakpoint == XXL {
    @media only screen and (min-width: 112.5em) {
      @content; //1800px
    }
  }
}
// ------------------------------------- RESPONSIVE MIXINS V2
// $phone: 600px;
// $tablet-portrait: 900px;
// $tablet-landscape: 1200px;
// $big-desktop: 1800px;
// @mixin respond($breakpoint) {
// 	@media (max-width: (($breakpoint / 16px) * 1em)) {
// 		@content
// 	}
// }

.row {
  max-width: $grid-width;
  margin: 0 auto;
  &:not(:last-child) {
    margin-bottom: $gutter-vertical;
    @include responsive(M) {
      width: 100%;
      margin-bottom: $gutter-vertical-small;
    }
  }
  @include responsive(M) {
    max-width: 50rem;
  }
  // @include clearfix;

  [class^='col-'] {
    float: left;
    &:not(:last-child) {
      margin-right: $gutter-horizontal;
      @include responsive(M) {
        width: 100%;
        padding: 0 3rem;
        margin-right: 0;
        margin-bottom: $gutter-vertical-small;
      }
    }
    &:last-child {
      @include responsive(M) {
        width: 100%;
        padding: 0 3rem;
        margin-right: 0;
        margin-bottom: $gutter-vertical-small;
      }
    }
  }

  .col-1-of-2 {
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }

  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }

  .col-2-of-3 {
    width: calc(
      2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal}
    );
  }

  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }

  .col-2-of-4 {
    width: calc(
      2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal}
    );
  }

  .col-3-of-4 {
    width: calc(
      3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal}
    );
  }
}

@mixin clearfix {
  &:after {
    content: '';
    display: table;
    clear: both;
  }
}
@mixin box-shadow($s1: 1.5rem, $s2: 4rem, $alpha: 0.5) {
  box-shadow: 0 $s1 $s2 rgba($color-black, $alpha);
}
@mixin absolute-center($top: 50%) {
  position: absolute;
  left: 50%;
  top: $top;
  transform: translate(-50%, -50%);
}
// ------------------------------------- UNIVERSAL CLASSES
.center {
  text-align: center;
  position: absolute;
  left: 50%;
  top: 85%;
  transform: translate(-50%);
  // top: 10rem;
  @include responsive(M) {
    top: 100%;
  }
}
.margin-XL {
  margin-bottom: 8rem;
}
.margin-M {
  margin-bottom: 4rem;
}
.margin-S {
  margin-bottom: 2rem;
}
.heading-secondary {
  white-space: nowrap;
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  background-image: linear-gradient(
    to right,
    $text-gradient-1,
    $text-gradient-2
  );
  display: inline-block;
  background-clip: text;
  color: transparent;
  position: relative;
  left: 50%;
  transform: translate(-50%);
  letter-spacing: 0.2rem;
  @include responsive(S) {
    font-size: 2.2rem;
  }
  &:hover::after {
    opacity: 0;
  }
  &::after {
    content: 'Photo and editing skills';
    position: absolute;
    display: inline-block;
    background-image: linear-gradient(
      to right,
      $text-gradient-2,
      $text-gradient-1
    );
    background-clip: text;
    left: 50%;
    transform: translate(-50%);
    width: 100%;
    transition: all 1s;
  }
}
.heading-tertiary {
  font-size: $default-font-size;
  font-weight: 700;
  text-transform: uppercase;
}

.btn {
  &,
  &:link,
  &:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 8rem;
    display: inline-block;
    transition: all 1s;
    position: relative;

    //for <button> element
    border: none;
    cursor: pointer;
  }
  &:hover {
    background-color: $color-white;
    color: $gray-Text-Color;
    box-shadow: 0 1rem 1rem rgba($color-black, 0.3);
    &::after {
      transform: scaleY(2) scaleX(1.4);
      opacity: 0;
    }
  }
  &:active,
  &:focus {
    outline: none;
    transform: scale(0.8);
    box-shadow: 0.2rem 0.2rem 0.2rem rgba($color-black, 0.2);
  }
  &--primary {
    margin-top: 3rem;
    background-color: rgba($main-btn-color, 0.1);
    border: 0.1rem solid $color-white;
    color: $color-white;
    font-size: 1.6rem;
    font-weight: 600;
    &::after {
      background-color: rgba($main-btn-color, 0.3);
    }
  }
  &--orange {
    background-color: rgba($color-coral, 0.7);
    color: $color-white;
    font-size: $default-font-size;
    border-radius: 5rem;
    @include box-shadow;
    @include absolute-center(10%);
    @include responsive(XXL) {
      top: 10rem;
    }
    @include responsive(XL) {
      top: 15rem;
    }
    @include responsive(M) {
      top: 5rem;
    }
    &:hover {
      background-color: $color-coral;
      color: $color-white;
    }
  }
  &::after {
    content: ' ';
    display: inline-block;
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all 1s;
  }
  &--animated {
    animation: btn_fade 2s ease-in-out 1s backwards;
  }
  @keyframes btn_fade {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }
}

.btn-text {
  text-decoration: none;
  transition: all 1s;
  &:link,
  &:visited {
    color: $headingColor2;
    font-size: 2rem;
    // display: inline-block;
    border-bottom: 0.1rem solid $headingColor2;
    padding-bottom: 0.3rem;
  }
  &:hover {
    background-color: $headingColor2;
    color: $color-white;
    padding: 1rem;
    margin-left: -1rem;
  }
  &:active {
    background-color: $headingColor1;
    color: $headingColor2;
    border-bottom: 0.1rem solid $headingColor1;
  }
}
